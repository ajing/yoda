# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/01_run.ipynb (unless otherwise specified).

__all__ = ['AIP']

# Cell
from datetime import datetime
from functools import lru_cache
import uuid
import os
from pathlib import Path
import tempfile
import yaml

from blocks.filesystem import GCSFileSystem as gcsfs

# Cell
class AIP:

    @property
    @lru_cache(1)
    def job_name(self):
        now = datetime.now()
        date_time = now.strftime("%Y%m%d_%H%M%S")
        gen_uunid = hex(uuid.getnode())
        return f"ai_run_{date_time}_{gen_uunid}"

    @property
    @lru_cache(1)
    def job_dir(self):
        return ""

    def run(self, output_dir: Path, python_version: str = "3.7", runtime_version: str = "2.1", scale_tier: str = "CUSTOM", region: str = "us-central1", machine_type: str = "n1-highmem-32"):
        job_name = self.job_name
        trainer_package_path = output_dir / "src"
        job_dir = output_dir / "output"

        # prepare the folder on gcp

        # upload to gcp
        main_trainer_module = output_dir / "src" / "CHANGE_THIS"

        # config
        config = {
            "trainingInput":
            {
                "scaleTier": "CUSTOM",
                "masterType": machine_type
            }
        }
        with tempfile.NamedTemporaryFile(mode = "w") as fp:
            yaml.dump(config, fp, sort_keys=True)
            config_path = fp.name

            # run the job
            gcp_cmd = f"""
                gcloud ai-platform jobs submit training {job_name} \
                --job-dir {job_dir} \
                --package-path {trainer_package_path} \
                --module-name {main_trainer_module} \
                --region {region} \
                --master-image-uri {image}
                --runtime-version={runtime_version} \
                --python-version={python_version} \
                --scale-tier {scale_tier} \
                --config {config_path}
            """
            print(gcp_cmd)