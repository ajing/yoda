# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/03_tags.ipynb (unless otherwise specified).

__all__ = ['DataTag', 'FileTag', 'FormatTag']

# Cell
import yaml
import os
import calendar
import time
import blocks

# Cell
def _interpolate_string(input_string: str):
    fillin_dict = dict(os.environ)
    update_dict = {
        "NOW": time.strftime("%Y%m%d_%H%M%S"),
        "EPOCH": calendar.timegm(time.gmtime()),
    }
    fillin_dict.update(update_dict)
    return input_string.format(**fillin_dict)

# Cell
class DataTag(yaml.YAMLObject):
    """
    Load data as pandas dataframe
    """
    yaml_tag = u'!data'
    yaml_loader = yaml.SafeLoader

    @classmethod
    def from_yaml(cls, loader, node):
        filename = loader.construct_scalar(node)
        filename = _interpolate_string(filename)
        return blocks.assemble(filename)

# Cell
class FileTag(yaml.YAMLObject):
    """
    Read local file as a string.
    """
    yaml_tag = u'!file'
    yaml_loader = yaml.SafeLoader

    @classmethod
    def from_yaml(cls, loader, node):
        filename = loader.construct_scalar(node)
        filename = _interpolate_string(filename)
        with open(filename, 'r') as file:
            data = file.read()
        return data

# Cell
class FormatTag(yaml.YAMLObject):
    """
    This tag supporting: NOW, EPOCH, and anything from environment variable.
    """
    yaml_tag = u'!format'
    yaml_loader = yaml.SafeLoader

    @classmethod
    def from_yaml(cls, loader, node):
        values = loader.construct_scalar(node)
        return _interpolate_string(values)